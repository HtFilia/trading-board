name: CD

on:
  push:
    branches:
      - release
      - release/**
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: trading-board/market-data
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME || '' }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD || '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine release version
        id: version
        run: |
          set -euo pipefail
          git fetch --tags --force
          VERSION=$(git describe --tags --exact-match HEAD 2>/dev/null || true)
          if [ -z "$VERSION" ]; then
            echo "::error::Release branch commits must have an exact version tag"
            exit 1
          fi
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(\+[A-Za-z0-9._-]+)?$ ]]; then
            echo "::error::Tag '$VERSION' does not match required x.y.z or x.y.z+flag format"
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        if: ${{ env.REGISTRY_USERNAME != '' && env.REGISTRY_PASSWORD != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build image
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          docker build -t "$IMAGE_NAME:$VERSION" -t "$IMAGE_NAME:latest" .

      - name: Push image
        if: ${{ env.REGISTRY_USERNAME != '' && env.REGISTRY_PASSWORD != '' }}
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          docker push "$IMAGE_NAME:$VERSION"
          docker push "$IMAGE_NAME:latest"
